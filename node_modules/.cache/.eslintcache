[{"/Users/hkr/tech_train/railway-todo-app-forked/src/index.js":"1","/Users/hkr/tech_train/railway-todo-app-forked/src/store.js":"2","/Users/hkr/tech_train/railway-todo-app-forked/src/App.js":"3","/Users/hkr/tech_train/railway-todo-app-forked/src/reportWebVitals.js":"4","/Users/hkr/tech_train/railway-todo-app-forked/src/authSlice.js":"5","/Users/hkr/tech_train/railway-todo-app-forked/src/routes/Router.jsx":"6","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/EditList.jsx":"7","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/Home.jsx":"8","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/EditTask.jsx":"9","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/SignIn.jsx":"10","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/NewTask.jsx":"11","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/NewList.jsx":"12","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/NotFound.jsx":"13","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/SignUp.jsx":"14","/Users/hkr/tech_train/railway-todo-app-forked/src/const.js":"15","/Users/hkr/tech_train/railway-todo-app-forked/src/components/Header.jsx":"16"},{"size":753,"mtime":1685397635307,"results":"17","hashOfConfig":"18"},{"size":182,"mtime":1685393800186,"results":"19","hashOfConfig":"18"},{"size":201,"mtime":1685622452645,"results":"20","hashOfConfig":"18"},{"size":364,"mtime":1685393800176,"results":"21","hashOfConfig":"18"},{"size":467,"mtime":1685393800155,"results":"22","hashOfConfig":"18"},{"size":1331,"mtime":1685623101228,"results":"23","hashOfConfig":"18"},{"size":2564,"mtime":1685625268856,"results":"24","hashOfConfig":"18"},{"size":5808,"mtime":1685779365276,"results":"25","hashOfConfig":"18"},{"size":4447,"mtime":1685779365238,"results":"26","hashOfConfig":"18"},{"size":2126,"mtime":1685397449252,"results":"27","hashOfConfig":"18"},{"size":3538,"mtime":1685779365321,"results":"28","hashOfConfig":"18"},{"size":1539,"mtime":1685397469510,"results":"29","hashOfConfig":"18"},{"size":99,"mtime":1685394382212,"results":"30","hashOfConfig":"18"},{"size":2401,"mtime":1685774807036,"results":"31","hashOfConfig":"18"},{"size":50,"mtime":1685393800161,"results":"32","hashOfConfig":"18"},{"size":822,"mtime":1685394382130,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"17ku6e5",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"66","usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"74","usedDeprecatedRules":"37"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"81","usedDeprecatedRules":"37"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/hkr/tech_train/railway-todo-app-forked/src/index.js",[],[],[],"/Users/hkr/tech_train/railway-todo-app-forked/src/store.js",[],[],"/Users/hkr/tech_train/railway-todo-app-forked/src/App.js",[],[],"/Users/hkr/tech_train/railway-todo-app-forked/src/reportWebVitals.js",[],[],"/Users/hkr/tech_train/railway-todo-app-forked/src/authSlice.js",[],[],"/Users/hkr/tech_train/railway-todo-app-forked/src/routes/Router.jsx",[],[],"/Users/hkr/tech_train/railway-todo-app-forked/src/pages/EditList.jsx",["88"],[],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Header } from \"../components/Header\";\nimport { url } from \"../const\";\nimport \"./editList.scss\";\n\nexport const EditList = () => {\n  const navigate = useNavigate();\n  const { listId } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [cookies] = useCookies();\n  const handleTitleChange = (e) => setTitle(e.target.value);\n  const onUpdateList = () => {\n    const data = {\n      title: title,\n    };\n\n    axios\n      .put(`${url}/lists/${listId}`, data, {\n        headers: {\n          authorization: `Bearer ${cookies.token}`,\n        },\n      })\n      .then(() => {\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        setErrorMessage(`更新に失敗しました。 ${err}`);\n      });\n  };\n\n  const onDeleteList = () => {\n    axios\n      .delete(`${url}/lists/${listId}`, {\n        headers: {\n          authorization: `Bearer ${cookies.token}`,\n        },\n      })\n      .then(() => {\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        setErrorMessage(`削除に失敗しました。${err}`);\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(`${url}/lists/${listId}`, {\n        headers: {\n          authorization: `Bearer ${cookies.token}`,\n        },\n      })\n      .then((res) => {\n        const list = res.data;\n        setTitle(list.title);\n      })\n      .catch((err) => {\n        setErrorMessage(`リスト情報の取得に失敗しました。${err}`);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <main className=\"edit-list\">\n        <h2>リスト編集</h2>\n        <p className=\"error-message\">{errorMessage}</p>\n        <form className=\"edit-list-form\">\n          <label>タイトル</label>\n          <br />\n          <input\n            type=\"text\"\n            className=\"edit-list-title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <br />\n          <button\n            type=\"button\"\n            className=\"delete-list-button\"\n            onClick={onDeleteList}\n          >\n            削除\n          </button>\n          <button\n            type=\"button\"\n            className=\"edit-list-button\"\n            onClick={onUpdateList}\n          >\n            更新\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n};\n","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/Home.jsx",[],[],"/Users/hkr/tech_train/railway-todo-app-forked/src/pages/EditTask.jsx",["89","90"],[],"/Users/hkr/tech_train/railway-todo-app-forked/src/pages/SignIn.jsx",["91","92"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useCookies } from \"react-cookie\";\nimport { Navigate, useNavigate, Link } from \"react-router-dom\";\nimport { Header } from \"../components/Header\";\nimport \"./signin.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signIn } from \"../authSlice\";\nimport { url } from \"../const\";\n\nexport const SignIn = () => {\n  const auth = useSelector((state) => state.auth.isSignIn);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState();\n  const [setCookie] = useCookies();\n  const handleEmailChange = (e) => setEmail(e.target.value);\n  const handlePasswordChange = (e) => setPassword(e.target.value);\n  const onSignIn = () => {\n    axios\n      .post(`${url}/signin`, { email: email, password: password })\n      .then((res) => {\n        setCookie(\"token\", res.data.token);\n        dispatch(signIn());\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        setErrorMessage(`サインインに失敗しました。${err}`);\n      });\n  };\n\n  if (auth) return <Navigate to=\"/\" />;\n\n  return (\n    <div>\n      <Header />\n      <main className=\"signin\">\n        <h2>サインイン</h2>\n        <p className=\"error-message\">{errorMessage}</p>\n        <form className=\"signin-form\">\n          <label className=\"email-label\">メールアドレス</label>\n          <br />\n          <input\n            type=\"email\"\n            className=\"email-input\"\n            onChange={handleEmailChange}\n          />\n          <br />\n          <label className=\"password-label\">パスワード</label>\n          <br />\n          <input\n            type=\"password\"\n            className=\"password-input\"\n            onChange={handlePasswordChange}\n          />\n          <br />\n          <button type=\"button\" className=\"signin-button\" onClick={onSignIn}>\n            サインイン\n          </button>\n        </form>\n        <Link to=\"/signup\">新規作成</Link>\n      </main>\n    </div>\n  );\n};\n","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/NewTask.jsx",["93","94"],[],"import React, { useState, useEffect } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport { url } from \"../const\";\nimport { Header } from \"../components/Header\";\nimport \"./newTask.scss\";\nimport { useNavigate } from \"react-router-dom\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport const NewTask = () => {\n  const [selectListId, setSelectListId] = useState();\n  const [lists, setLists] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [limit, setLimit] = useState(new Date());\n  const [detail, setDetail] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [cookies] = useCookies();\n  const navigate = useNavigate();\n  const handleTitleChange = (e) => setTitle(e.target.value);\n  const handleDetailChange = (e) => setDetail(e.target.value);\n  const handleSelectList = (id) => setSelectListId(id);\n  const handleLimitChange = (date) => setLimit(date);\n  const onCreateTask = () => {\n    const data = {\n      title: title,\n      detail: detail,\n      done: false,\n      limit: limit.toISOString().split(\".\")[0] + \"Z\",\n    };\n    console.log({ data });\n    console.log(typeof data);\n\n    axios\n      .post(`${url}/lists/${selectListId}/tasks`, data, {\n        headers: {\n          authorization: `Bearer ${cookies.token}`,\n        },\n      })\n      .then(() => {\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        setErrorMessage(`タスクの作成に失敗しました。${err}`);\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(`${url}/lists`, {\n        headers: {\n          authorization: `Bearer ${cookies.token}`,\n        },\n      })\n      .then((res) => {\n        setLists(res.data);\n        setSelectListId(res.data[0]?.id);\n      })\n      .catch((err) => {\n        setErrorMessage(`リストの取得に失敗しました。${err}`);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <main className=\"new-task\">\n        <h2>タスク新規作成</h2>\n        <p className=\"error-message\">{errorMessage}</p>\n        <form className=\"new-task-form\">\n          <label>リスト</label>\n          <br />\n          <select\n            onChange={(e) => handleSelectList(e.target.value)}\n            className=\"new-task-select-list\"\n          >\n            {lists.map((list, key) => (\n              <option key={key} className=\"list-item\" value={list.id}>\n                {list.title}\n              </option>\n            ))}\n          </select>\n          <br />\n          <label>タイトル</label>\n          <br />\n          <input\n            type=\"text\"\n            onChange={handleTitleChange}\n            className=\"new-task-title\"\n          />\n          <br />\n          <label>リミット</label>\n          <br />\n          <DatePicker\n            dateFormat=\"yyyy/MM/dd HH:mm\"\n            locale=\"ja\"\n            onChange={handleLimitChange}\n            selected={limit}\n            showTimeSelect\n            className=\"new-task-limit\"\n          />\n          <br />\n          <label>詳細</label>\n          <br />\n          <textarea\n            type=\"text\"\n            onChange={handleDetailChange}\n            className=\"new-task-detail\"\n          />\n          <br />\n          <button\n            type=\"button\"\n            className=\"new-task-button\"\n            onClick={onCreateTask}\n          >\n            作成\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n};\n","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/NewList.jsx",["95"],[],"import React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport { Header } from \"../components/Header\";\nimport { useNavigate } from \"react-router-dom\";\nimport { url } from \"../const\";\nimport \"./newList.scss\";\n\nexport const NewList = () => {\n  const [cookies] = useCookies();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const handleTitleChange = (e) => setTitle(e.target.value);\n  const onCreateList = () => {\n    const data = {\n      title: title,\n    };\n\n    axios\n      .post(`${url}/lists`, data, {\n        headers: {\n          authorization: `Bearer ${cookies.token}`,\n        },\n      })\n      .then(() => {\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        setErrorMessage(`リストの作成に失敗しました。${err}`);\n      });\n  };\n\n  return (\n    <div>\n      <Header />\n      <main className=\"new-list\">\n        <h2>リスト新規作成</h2>\n        <p className=\"error-message\">{errorMessage}</p>\n        <form className=\"new-list-form\">\n          <label>タイトル</label>\n          <br />\n          <input\n            type=\"text\"\n            onChange={handleTitleChange}\n            className=\"new-list-title\"\n          />\n          <br />\n          <button\n            type=\"button\"\n            onClick={onCreateList}\n            className=\"new-list-button\"\n          >\n            作成\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n};\n","/Users/hkr/tech_train/railway-todo-app-forked/src/pages/NotFound.jsx",[],[],"/Users/hkr/tech_train/railway-todo-app-forked/src/pages/SignUp.jsx",["96","97","98"],[],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\nimport { signIn } from \"../authSlice\";\nimport { Header } from \"../components/Header\";\nimport { url } from \"../const\";\nimport \"./signUp.scss\";\n\nexport const SignUp = () => {\n  const navigate = useNavigate();\n  const auth = useSelector((state) => state.auth.isSignIn);\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessge] = useState();\n  const [, setCookie, ] = useCookies();\n  const handleEmailChange = (e) => setEmail(e.target.value);\n  const handleNameChange = (e) => setName(e.target.value);\n  const handlePasswordChange = (e) => setPassword(e.target.value);\n  const onSignUp = () => {\n    const data = {\n      email: email,\n      name: name,\n      password: password,\n    };\n\n    axios\n      .post(`${url}/users`, data)\n      .then((res) => {\n        const token = res.data.token;\n        dispatch(signIn());\n        setCookie(\"token\", token);\n        navigate(\"/\");\n      })\n      .catch((err) => {\n        setErrorMessge(`サインアップに失敗しました。 ${err}`);\n      });\n    if (auth) return <Navigate to=\"/\" />;\n  };\n  return (\n    <div>\n      <Header />\n      <main className=\"signup\">\n        <h2>新規作成</h2>\n        <p className=\"error-message\">{errorMessage}</p>\n        <form className=\"signup-form\">\n          <label>メールアドレス</label>\n          <br />\n          <input\n            type=\"email\"\n            onChange={handleEmailChange}\n            className=\"email-input\"\n          />\n          <br />\n          <label>ユーザ名</label>\n          <br />\n          <input\n            type=\"text\"\n            onChange={handleNameChange}\n            className=\"name-input\"\n          />\n          <br />\n          <label>パスワード</label>\n          <br />\n          <input\n            type=\"password\"\n            onChange={handlePasswordChange}\n            className=\"password-input\"\n          />\n          <br />\n          <button type=\"button\" onClick={onSignUp} className=\"signup-button\">\n            作成\n          </button>\n        </form>\n      </main>\n    </div>\n  );\n};\n","/Users/hkr/tech_train/railway-todo-app-forked/src/const.js",[],[],"/Users/hkr/tech_train/railway-todo-app-forked/src/components/Header.jsx",[],[],{"ruleId":"99","severity":1,"message":"100","line":18,"column":7,"nodeType":"101","messageId":"102","endLine":18,"endColumn":19,"fix":"103"},{"ruleId":"99","severity":1,"message":"100","line":27,"column":7,"nodeType":"101","messageId":"102","endLine":27,"endColumn":19,"fix":"104"},{"ruleId":"99","severity":1,"message":"100","line":28,"column":7,"nodeType":"101","messageId":"102","endLine":28,"endColumn":21,"fix":"105"},{"ruleId":"99","severity":1,"message":"100","line":23,"column":32,"nodeType":"101","messageId":"102","endLine":23,"endColumn":44,"fix":"106"},{"ruleId":"99","severity":1,"message":"100","line":23,"column":46,"nodeType":"101","messageId":"102","endLine":23,"endColumn":64,"fix":"107"},{"ruleId":"99","severity":1,"message":"100","line":26,"column":7,"nodeType":"101","messageId":"102","endLine":26,"endColumn":19,"fix":"108"},{"ruleId":"99","severity":1,"message":"100","line":27,"column":7,"nodeType":"101","messageId":"102","endLine":27,"endColumn":21,"fix":"109"},{"ruleId":"99","severity":1,"message":"100","line":17,"column":7,"nodeType":"101","messageId":"102","endLine":17,"endColumn":19,"fix":"110"},{"ruleId":"99","severity":1,"message":"100","line":25,"column":7,"nodeType":"101","messageId":"102","endLine":25,"endColumn":19,"fix":"111"},{"ruleId":"99","severity":1,"message":"100","line":26,"column":7,"nodeType":"101","messageId":"102","endLine":26,"endColumn":17,"fix":"112"},{"ruleId":"99","severity":1,"message":"100","line":27,"column":7,"nodeType":"101","messageId":"102","endLine":27,"endColumn":25,"fix":"113"},"object-shorthand","Expected property shorthand.","Property","expectedPropertyShorthand",{"range":"114","text":"115"},{"range":"116","text":"115"},{"range":"117","text":"118"},{"range":"119","text":"120"},{"range":"121","text":"122"},{"range":"123","text":"115"},{"range":"124","text":"118"},{"range":"125","text":"115"},{"range":"126","text":"120"},{"range":"127","text":"128"},{"range":"129","text":"122"},[636,648],"title",[1084,1096],[1104,1118],"detail",[908,920],"email",[922,940],"password",[1046,1058],[1066,1080],[578,590],[988,1000],[1008,1018],"name",[1026,1044]]